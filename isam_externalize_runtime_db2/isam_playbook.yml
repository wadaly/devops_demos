---
- name: Run ISAM First Steps
  vars_files:
  - isam.env
  hosts: 172.31.31.26
  connection: local

  tasks:

  - name: Get ISAM DB2 Runtime Database Configuration Script
    uri:
      url: "https://{{ inventory_hostname }}:{{ isam_lmi_port }}/isam/downloads/access_control/database/db2/runtime/isam_access_control_db2.sql"
      user: "{{isam_admin_id}}"
      password: "{{isam_admin_pw}}"
      method: GET
      force_basic_auth: yes
      validate_certs: no
      status_code: 200
      headers:
        Accept: application/json
      return_content: yes
    register: uri_out

  - name: Write File
    copy:
      content: "{{ ( uri_out.content | from_json ).contents }}"
      dest: /tmp/isam_access_control_db2.sql

  - name: Replace &DBINSTANCE
    replace:
      path: /tmp/isam_access_control_db2.sql
      regexp: '&DBINSTANCE'
      replace: 'db2inst1'

  - name: Replace &DBUSER
    replace:
      path: /tmp/isam_access_control_db2.sql
      regexp: '&DBUSER'
      replace: 'db2inst1'

  - name: Replace &DBPASSWORD
    replace:
      path: /tmp/isam_access_control_db2.sql
      regexp: '&DBPASSWORD'
      replace: 'Passw0rd'

  - name: Export ISAM Database
    uri:
      url: "https://{{ inventory_hostname }}:{{ isam_lmi_port }}/isam/cluster/hvdb/v1?type=db2"
      user: "{{isam_admin_id}}"
      password: "{{isam_admin_pw}}"
      method: GET
      force_basic_auth: yes
      validate_certs: no
      status_code: 200
      headers:
        Accept: application/json
      return_content: yes
    register: uri_out

  - name: Debug URI Out
    debug:
      var: uri_out

  - name: Write File
    copy:
      content: "{{ uri_out.content }}"
      dest: /tmp/hvdb_db2.zip

# This works!
# - name: Run OS Command
#   shell: >
#     ls -l /tmp;
#     /usr/bin/pwd;
#     date;
#     /usr/bin/docker cp /tmp/hvdb_db2.zip isamdb2:/tmp/hvdb_db2.zip;
#     /usr/bin/docker cp /tmp/isam_access_control_db2.sql isamdb2:/tmp/isam_access_control_db2.sql;
#     /usr/bin/docker exec isamdb2 ls -l /tmp;
#     /usr/bin/docker exec isamdb2 su - db2inst1 -c "db2 -tsvf /tmp/isam_access_control_db2.sql"
#   register: cmd_out

# - name: Debug CMD Out
#   debug:
#     var: cmd_out

# Now I need to get the files to the DB2 server where I can run them. Or should I run Ansible from my Docker host? Then I can readily use docker cp to get the files I need there and issue local OS commands to exec processes.
...
